const express = require('express');
const fileUpload = require('express-fileupload');
const app = express();

// app.use('/', express.static(__dirname + "/view"));

app.set('views', __dirname + "/views");

// 将模板引擎用于 Express
// https://expressjs.com/zh-cn/guide/using-template-engines.html
app.set('view engine', 'html');

// ejs
// https://github.com/mde/ejs/wiki/Using-EJS-with-Express
app.engine(".html", require('ejs').__express);

// enable parseNested
app.use(fileUpload({ parseNested: true }));

app.get("/", function (req, res) {
  res.render('index', { title: "express-fileupload prototype pollution" });
});

app.post('/upload', function (req, res) {
  let sampleFile;
  let uploadPath;
  if (!req.files || Object.keys(req.files).length === 0) {
    res.status(400).render('index', { title: 'No files were uploaded.' });
    return;
  }

  console.log('req.files >>>', req.files); // eslint-disable-line

  sampleFile = req.files.sampleFile;

  uploadPath = __dirname + '/uploads/' + sampleFile.name;

  sampleFile.mv(uploadPath, function (err) {
    if (err) {
      return res.status(500).render('index', { title: err });
    }
    res.render('index', { title: 'File uploaded to ' + uploadPath });
  });
});


const PORT = 3000;
app.listen(PORT, function () {
  console.log('Express server listening on port ', PORT); // eslint-disable-line
})